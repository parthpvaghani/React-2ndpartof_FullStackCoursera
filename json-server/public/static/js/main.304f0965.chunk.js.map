{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/CommentForm.js","components/DishdetailComponent.js","components/LeaderComponent.js","components/AboutComponent.js","Redux/ActionCreators.js","Redux/ActionTypes.js","components/MainComponent.js","Redux/dishes.js","Redux/comments.js","Redux/leaders.js","Redux/promotions.js","Redux/forms.js","App.js","Redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","isLoading","errMess","active","Header","toggleNav","bind","state","isNavOpen","isModalOpen","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Fragment","dark","expand","onClick","href","height","isOpen","navbar","outline","color","toggle","onSubmit","htmlFor","type","innerRef","input","check","Component","Footer","RenderCard","item","in","transformProps","exitTransform","designation","description","Home","dishesLoading","dishErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","Contact","values","console","log","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","required","val","length","maxLength","len","minLength","role","model","handleSubmit","md","text","placeholder","validators","show","messages","isNumber","isNaN","Number","validEmail","test","size","offset","checkbox","select","textarea","rows","row","CommentForm","postComment","dishId","rating","yourname","comment","RenderDish","style","top","RenderComments","comments","key","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","RenderLeader","About","leaders","title","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","body","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","newFeedback","actions","reset","Dishes","action","Comments","concat","Leaders","Promotions","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.304f0965.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nfunction RenderMenuItem({ dish }) {\r\n    return (\r\n        <Card >\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\nconst Menu = (props) => {\r\n\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport {\r\n    Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nclass Header extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar dark className=\"navbar-light fixed-top\" expand=\"md\">\r\n                    <div className=\"container-fluid\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/home'><span className=\"fa fa-home fa\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/menu'><span className=\"fa fa-list fa\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline color=\"warning\" onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\" ></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6 \">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our\r\n                        lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                        innerRef={(input) => this.remember = input} />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-4 col-sm-4 \">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-4\">\r\n                        <h5>Our Address</h5>\r\n                        <address className=\"address\">\r\n                            121, Clear Water Bay Road<br />\r\n                                Clear Water Bay, Kowloon<br />\r\n                                    HONG KONG<br />\r\n                                        Tel.: +852 1234 5678<br />\r\n                                            Fax: +852 8765 4321<br />\r\n                                                Email: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 \">\r\n                        <div>\r\n                            <h5>Social Links</h5>\r\n                            <ul className=\"list-unstyled list-inline\">\r\n                                <li className=\"list-inline-item\"><a href=\"http://google.com/+\"\r\n                                    className=\"btn btn-social-icon btn-google\"><i className=\"fa fa-google-plus fa-lg\"></i></a>\r\n                                </li>\r\n                                <li className=\"list-inline-item\"><a href=\"http://www.facebook.com/profile.php?id=\"\r\n                                    className=\"btn btn-social-icon btn-facebook\"><i className=\"fa fa-facebook fa-lg\"></i></a>\r\n                                </li>\r\n                                <li className=\"list-inline-item\"><a href=\"http://www.linkedin.com/in/\"\r\n                                    className=\"btn btn-social-icon btn-linkedin\"><i className=\"fa fa-linkedin fa-lg\"></i></a>\r\n                                </li>\r\n                                <li className=\"list-inline-item\"><a href=\"http://twitter.com/\"\r\n                                    className=\"btn btn-social-icon btn-twitter\"><i className=\"fa fa-twitter fa-lg\"></i></a></li>\r\n                                <li className=\"list-inline-item\"><a href=\"http://youtube.com/\"\r\n                                    className=\"btn btn-social-icon btn-google\"><i className=\"fa fa-youtube fa-lg\"></i></a></li>\r\n                                <li className=\"list-inline-item\"><a href=\"mailto:\" className=\"btn btn-social-icon\"><i\r\n                                    className=\"fa fa-envelope fa-lg\"></i></a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"container mt-3\">\r\n                <div className=\"row justify-content-center small\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {\r\n  Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Loading />\r\n    );\r\n  }\r\n  else if (errMess) {\r\n    return (\r\n      <h4>{errMess}</h4>\r\n    );\r\n  }\r\n  else\r\n    return (\r\n      <FadeTransform\r\n        in\r\n        transformProps={{\r\n          exitTransform: 'scale(0.5) translateY(-50%)'\r\n        }}>\r\n        <Card>\r\n          <CardImg src={baseUrl + item.image} alt={item.name} />\r\n          <CardBody>\r\n            <CardTitle>{item.name}</CardTitle>\r\n            {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n            <CardText>{item.description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </FadeTransform>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row align-items-start\">\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishErrMess} />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home; ","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from 'react';\r\nimport { BreadcrumbItem, Breadcrumb, Row, Label, Col, Button, FormGroup } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\nclass Contact extends Component {\r\n\r\n   \r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n  \r\n    render()\r\n    {\r\n        const required = (val) => val && val.length;\r\n        const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n        const minLength = (len) => (val) => val && (val.length >= len);\r\n        const isNumber = (val) => !isNaN(Number(val));\r\n        const validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values)=>{this.handleSubmit(values)}}>\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters ',\r\n                                            maxLength: 'Must be 15 characters or less '\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters ',\r\n                                            maxLength: 'Must be 15 characters or less '\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 numbers ',\r\n                                            maxLength: 'Must be 15 numbers or less ',\r\n                                            isNumber: 'Must be a number '\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            validEmail: 'Invalid Email Address '\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <FormGroup row>\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Row, Label, Col, Button, FormGroup, Modal, ModalHeader,ModalBody } from 'reactstrap';\r\n\r\n\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n     \r\n    handleSubmit(values) {\r\n        this.props.postComment(this.props.dishId, values.rating, values.yourname, values.comment);\r\n    }\r\n    \r\n    render() {\r\n\r\n        const required = (val) => val && val.length;\r\n        const maxLength = (len) => (val) => !(val) || (val.length <= len);\r\n        const minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n        return (\r\n            <React.Fragment>\r\n            <Button outline color=\"secondary\" onClick={this.toggleModal}><span className=\"fa fa-comment fa-lg\" ></span>Submit Comment</Button>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n            <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n            <ModalBody>\r\n               <LocalForm onSubmit={(values)=>{this.handleSubmit(values)}}>\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12}>Ratings</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\"  id=\"rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"yourname\" md={12}>Your name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".yourname\" id=\"yourname\" name=\"yourname\"\r\n                                        placeholder=\"Enter Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".yourname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters ',\r\n                                            maxLength: 'Must be 15 characters or less '\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={12}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <FormGroup row>\r\n                                <Col md={12}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                       Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </LocalForm>\r\n            </ModalBody>\r\n        </Modal>\r\n        </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommentForm;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, BreadcrumbItem, Breadcrumb } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentForm from './CommentForm';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\nfunction RenderDish({ dish }) {\r\n\r\n    if (dish != null) {\r\n        return (\r\n            <React.Fragment>\r\n                <FadeTransform\r\n                    in\r\n                    transformProps={{\r\n                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }}>\r\n                    <Card style={{width:\"70%\"}}>\r\n                        <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    else\r\n        return (\r\n            <div></div>\r\n        );\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n\r\n    if (comments != null) {\r\n\r\n        const comment = comments.map((comment) => {\r\n            return (\r\n\r\n                \r\n                        <Fade in>\r\n                        <li key={comment.id}>\r\n                        <p>{comment.comment}</p>\r\n                        <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p><br />\r\n                        </li>\r\n                        </Fade>\r\n              \r\n            )\r\n        }\r\n\r\n        );\r\n        return (\r\n\r\n            <ul className=\"list-unstyled\">\r\n                <Stagger in>\r\n                {comment}\r\n                </Stagger>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </ul>\r\n\r\n        )\r\n    }\r\n    else {\r\n        return (<div></div>)\r\n    }\r\n\r\n\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md m-1 \">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={props.comments}\r\n                            postComment={props.postComment}\r\n                            dishId={props.dish.id}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default DishDetail;","import React from 'react';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nfunction RenderLeader(props) {\r\n    return (\r\n        <div className=\"container\">\r\n\r\n        <div className=\"row py-3\">\r\n            <div className=\"col-12 col-sm-2 order-sm-first\">\r\n            <img src={baseUrl +  props.leader.image} alt=\"alberto\" className=\" img-thumbnail d-flex align-self-center\" />\r\n            </div>\r\n\r\n            <div className=\"col col-sm\">\r\n                <div className=\"media\">\r\n                    <div className=\"media-body\">\r\n                        <h4 className=\"mb-3\">{props.leader.name}</h4>\r\n                        <h6 className=\"mb-3\">{props.leader.designation}</h6>\r\n                        <p>{props.leader.description}</p>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default RenderLeader;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport RenderLeader from './LeaderComponent';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            // <p>Leader {leader.name}</p>\r\n            <RenderLeader leader={leader} />\r\n        );\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                   \r\n                            <Stagger in>\r\n                                <Fade in>\r\n                                {leaders}\r\n                                </Fade>\r\n                            </Stagger>\r\n                     \r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n\r\n//this POSTFEEDBACK is a thunk which returns functions by taking either dispatch or getstate\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n    const newFeedback = {\r\n        firstname : firstname,\r\n        lastname : lastname,\r\n        telnum : telnum,\r\n        email : email,\r\n        agree : agree,\r\n        contactType : contactType,\r\n        message : message\r\n    };\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'feedbacks', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addFeedback(response)))\r\n    .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};\r\n\r\n\r\n//this fetch(post)comment is a thunk which returns functions by taking either dispatch or getstate\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\n\r\n\r\n//this fetchDishes is a thunk which returns functions by taking either dispatch or getstate  \r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n//this fetchComments is a thunk which returns functions by taking either dispatch or getstate\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\n\r\n\r\n//this fetchPromos is a thunk which returns functions by taking either dispatch or getstate\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n//this fetchLeaders is a thunk which returns functions by taking either dispatch or getstate\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\n\r\n\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport '../App.css';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../Redux/ActionCreators';\r\nimport { actions } from 'react-redux-form'\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n    fetchDishes: () => { dispatch(fetchDishes()) },\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchLeaders: () => dispatch(fetchLeaders())\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n    render() {\r\n\r\n        const HomePage = () => {\r\n            return (\r\n                <Home\r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promoLoading={this.props.promotions.isLoading}\r\n                    promoErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                    leaderLoading={this.props.leaders.isLoading}\r\n                    leaderErrMess={this.props.leaders.errMess}\r\n                />\r\n            );\r\n        }\r\n\r\n        const DishWithId = ({ match }) => {\r\n            return (\r\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment}\r\n                />\r\n            );\r\n        };\r\n\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch>\r\n                            <Route path='/home' component={HomePage} />\r\n                            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                            <Route path='/menu/:dishId' component={DishWithId} />\r\n                            <Route exact path='/contactus' component={() => <Contact postFeedback={this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n                            <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders}  />} />\r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","\r\nimport * as ActionTypes from './ActionTypes';\r\n//this is reducer takes state and action and based on it returns new state\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        leaders: []\r\n}, action) => {\r\n        switch (action.type) {\r\n                case ActionTypes.ADD_LEADERS:\r\n                        return { ...state, isLoading: false, errMess: null, leaders: action.payload };\r\n\r\n                case ActionTypes.LEADERS_LOADING:\r\n                        return { ...state, isLoading: true, errMess: null, leaders: [] }\r\n\r\n                case ActionTypes.LEADERS_FAILED:\r\n                        return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n                default:\r\n                        return state;\r\n        }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        promotions: []\r\n}, action) => {\r\n        switch (action.type) {\r\n                case ActionTypes.ADD_PROMOS:\r\n                        return { ...state, isLoading: false, errMess: null, promotions: action.payload };\r\n\r\n                case ActionTypes.PROMOS_LOADING:\r\n                        return { ...state, isLoading: true, errMess: null, promotions: [] }\r\n\r\n                case ActionTypes.PROMOS_FAILED:\r\n                        return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n                default:\r\n                        return state;\r\n        }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Main from './components/MainComponent';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {configureStore} from '../src/Redux/configureStore';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst store = configureStore();\r\n\r\nclass App extends Component {\r\n\r\n  render() {  \r\n    return (\r\n      <Provider store={store}>\r\n      <BrowserRouter>\r\n      <div>\r\n        <Main />\r\n      </div>\r\n      </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","import {Dishes} from './dishes';\r\nimport {Comments} from './comments';\r\nimport {Leaders} from './leaders';\r\nimport {Promotions} from './promotions';\r\nimport { InitialFeedback } from './forms';\r\nimport { createForms } from 'react-redux-form';\r\n\r\nimport { createStore, combineReducers, applyMiddleware} from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(combineReducers({\r\n        dishes: Dishes,\r\n        leaders: Leaders,\r\n        promotions: Promotions,\r\n        comments: Comments,\r\n        ...createForms({\r\n            feedback: InitialFeedback\r\n        })\r\n    }),\r\n    applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}